#docker run [image_name] [startup command]  - to fetch the docker image from docker hub to docker cache

#docker search [image_name]    -     search images in docker hub

#docker attach [container_name]    -     to go inside s  container

#docker ps  -   to see courrently running container in the system (option= --all or -a)

#docker [stop|start] [container ID]  -   to stop|start perticuler container

#docker rm [container ID]  -   to stop container and remove all the conatiner related data from system (-f = forecefully)

#docker kill [container ID]  -   to forcefully stop perticuler container

#docker run = docker create + docker start

#docker logs [container ID]  -  to see what is happening inside container

#docker diff [container_name]     -    to see the changes made in container

#docker exec -i -t [container id] [command]  -   to run command inside container (ex.command=/bin/bash)

#docker_file = contains all the information for running your software in a base container

#docker_file -> docker_client -> docker_server -> docker_image -> docker_container

#how to create custom Image
  step 1 -> choose a base Image
  step 2 -> run commands for your software
  step 3 -> specify the base command to be run at startup

#docker build -t [image_name]  .    -    to build an image from docker file (-t for giving the tag name)

#docker commit -c 'CMD "[startup command]" ' [container ID]    -     take a file system snapshot of whatever is going on , in that container and then start with 'startup command' next time
 
#docker run -p [machine_port]:[container_port] [Image_name]     -    connect the outer system port to docker container port  (-d to run deamon in background )

#docker run  -it --name [container_name] [image_name] [/bin/bash] -   to give a container a name (default-random name generated)

#docker system prune    -     to remove all the stoped container and their data

#docker cp [source] [destination]   -    copy file from container to machine ( source = [container_id]:[file_name] )

#docker commit [container_id] [new_image_name]  -   to commit changes to docker container and then it creates an docker image from that container

#docker images    -      to show all docker images

#docker image rm [image]    -    to remove image

#docker commit [container_id] [REPOSITORY:TAG]    -  to tag the container ( repository=harry/nginx    tag=6.7 )

#docker tag [local-image:tagname] [new-repo:tagname]  -   to change the local image name to push to remote repository(new-repo = username/imagename)

#docker push [new-repo:tagname]    -   to push the image to d
ockerHub
#docker-compose  -f  [filename.yaml]  up   -   to run commands in yaml file which create the containers specified in file, in same network (replace "up" with "down" to remove container)



********Dockerfile***********

FROM   -   which image to use as a base image
RUN    -   to execute a command, it will create a layer in image
MAINTAINER   -   auther/ownwer discription
COPY    -    copy path from local system to containers
ADD    -    similer to COPY, but it provides a feature to download a file form internet and also extarct the file 
EXPOSE   -    to expose the port , sudch as port 8080 for tomcat 
WORKDIR    -    to set a working directory for conatiner
CMD    -    execute the command during the cntainer creation 
ENTRYPONT  -   similer to CMD but has highr prioroty over CMD, first commmand will be executed by ENTRYPOINT only
ENV    -    enviroment variable


