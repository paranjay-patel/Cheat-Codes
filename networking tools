

************NETWORKING *************


#The Rsync program, which runs on port 873, can be used to transfer files from one computer to anothe
#Mail servers, such as Sendmail and Postfix, typically use port 25 for SMTP traffic. If your server shouldn’t be sending outgoing mail, you may want to block that kind of traffic

$ssh username@remotehostIP      -      allows us to connect to an external machine on the network with the use of the ssh protocol
$wget [link to file]     -     to download a file from within the terminal
$iptables -A INPUT -p tcp --dport 4000 -j ACCEPT       -       This sets the firewall to append (-A) the new rule to accept input packets via protocol (-p) TCP where the destination port (--dport) is 4000, and specifies the target jump (-j) rule as ACCEPT.
$ssh   pal@ubuntuPAL     -      command allows you to connect to another machine across the network, log in and then perform tasks on the remote machine. ( username@hostname=pal@ubuntuPAL)
$ssh localhost          -        used to generated data in the .log file
$service network restart           -          which takes down ALL interfaces, re-reads all related configuration files, and then restarts the networking for the system.
$host  google.com           -          provide the IP adress of google.com
$ip [OPTIONS] OBJECT COMMAND      -      show the type of interface, protocols, hardware and IP addresses, network masks and various other information about each of the active interfaces on the system
$route      -       To view a table that describes where network packages are sent
$ping localhost > /dev/null  &       -     use  '&'  to start the process in background , otherwise process will run in forground and you dont able to type in Terminal   
$ sudo ifconfig [interface_name] down       -      to up|down interface 

---ss, netstat---
$netstat -lntu     -     to list all open ports( sockets=-l, port_number=-n, TCP_ports=-t, UDP_ports=-u )
$netstat       -     provides a large amount of network information. It can be used to display information about network connections as well as display the routing table similar to the route command.
$ss [options]      -     to view what connections are currently established between their local machine and remote machines, statistics about those connections, etc (-l=listen, -t=tcp, -u=udp, -p=process, -s=statistics ,-4=IP4)
$ss dst/src [IPaddress]     -    List Connections to a destination/source IP Address

---ufw---
$sudo ufw status      -      shows ufw status
$sudo ufw [enable|disable]      -      to enable and disable ufw
$sudo ufw deny from [IP_address]      -      To block all network connections that originate from a specific IP address
$sudo ufw allow from [IP_address]      -     To allow all network connections that originate from a specific IP address
$sudo ufw [deny|allow] from 203.0.113.0/24      -      This would block/allow all IP addresses in the example subnet 203.0.113.0/24
$sudo ufw delete allow from [IP_address]      -      To delete a rule that you previously set up within UFW
$sudo ufw status numbered      -     to get the rule id
$sudo ufw delete [rule_ID]     -      to delete rule by ID
$sudo ufw app list     -    
$sudo ufw [deny|allow] in on eth0 from [IPaddress]       -     To block incoming connections from a specific IP address to a specific network interface eth0
$ufw allow [prot_number]       -       to allow the port_number for our webserver.
                           (UFW and IPTables are firewall interfaces for the Linux Kernel’s netfilter firewall. IPTables directly passes firewall rules to netfilter while UFW configures the rules in IPTables which then sends those rules to netfilter.)
$sudo ufw app list   -    To list which profiles are currently available. Upon installation, applications that rely on network communications will typically set up a UFW profile that you can use to allow connection from external addresses
$sudo ufw allow “OpenSSH”     -     To enable a UFW application profile
$sudo ufw allow from 203.0.113.103 proto tcp to any port 22    -    allow only SSH connections coming from the IP address 203.0.113.103
$sudo ufw allow proto tcp from any to any port 80,443    -    a single rule that allows both ports
$sudo ufw allow from 192.168.0.0/24 to any app OpenSSH     -    Usually a UFW profile such as OpenSSH is created when you install the openssh-server package. Using the already provided profile, you can restrict access to a specific subnet such as your home network’s subnet. 

---netcad---
$service iptables restart     -      restart iptable
$nc -l -p 4000      -      start netcat (nc) and listen on port 4000,
$[telnet|nc] [hostname/IP address] [port number]     -     This tries to open a TCP connection on host on port_number.(netcad=unencrypted, telnet=encrypted)
$netcat -z -v [hostname|IPaddress] 1-1000    -    we can scan all ports up to 1000 on that host ,liseninging or not(-n=to specify that you do not need to resolve the IP address using DNS)
$netcat [hostname/IP address] [port number] < [file_name]    -    use this file as an input for the netcat connection we will establish to the listening computer
$tar -czf - * | netcat domain.com 4444     -     we can pack them into a tarball and then send them to the remote computer through netcat:
$nc -v -n 192.168.56.110 22     -     to know what type of service is running behind port 22 on a specific server
$tar -zcf - [file/folder] | pv | nc -l -p 5555    -    run on machine A (Transfer Files Between Two Linux Machines)
$nc 192.168.1.4 5555 | pv | tar -zxf -        -         run on machine B (Transfer Files Between Two Linux Machines)

